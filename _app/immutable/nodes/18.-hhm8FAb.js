import"../chunks/DsnmJJEf.js";import{p as j,s as z,a as _,f as B,b as C,c as G,d as H,e as o,$ as r,g as e,u as a,h as w,a0 as d}from"../chunks/DN2LkAR_.js";import{M as J}from"../chunks/y-0iLokV.js";import{M as n}from"../chunks/BnX5XO6O.js";import{V as R}from"../chunks/Gnf6quZY.js";var K=B(`<!> <p>The randomization methods take two <code>Vector</code> as parameters <code>topLeft</code> and <code>bottomRight</code> which are used to bound the generated random values.</p> <p>On this page you can drag the <code>topLeft</code> and <code>bottomRight</code> vectors to
    change the bounds as well as the <code>v1</code> vector on which we call the <code>.randomizeX</code>, <code>.randomizeY</code> and <code>.randomize</code> methods. Each time
    these vectors are changed, the page generates 10 vectors to show a sample of output of the methods.</p> <p>You will notice that the results of <code>.randomizeX</code> all keep the same <code>.y</code> value as <code>v1</code> but have a <code>.x</code> value between the <code>.x</code> properties
    of <code>topLeft</code> and <code>bottomRight</code>.</p> <p>Similarly the results of <code>.randomizeY</code> all keep the same <code>.x</code> value as <code>v1</code> but have a <code>.y</code> value between the <code>.y</code> properties
    of <code>topLeft</code> and <code>bottomRight</code>.</p> <p>Finally, the results of <code>.randomize</code> are independent from the properties of <code>v1</code> and only depend on the <code>.x</code> and <code>.y</code> properties of <code>topLeft</code> and <code>bottomRight</code>.</p> <div class="results svelte-6zq5v2"><div class="result-section"><h3><code>Input</code></h3> <!></div> <div class="result-section"><h3><code>v1.randomizeX(topLeft, bottomRight)</code></h3> <!></div></div> <div class="results svelte-6zq5v2"><div class="result-section"><h3><code>Input</code></h3> <!></div> <div class="result-section"><h3><code>v1.randomizeY(topLeft, bottomRight)</code></h3> <!></div></div> <div class="results svelte-6zq5v2"><div class="result-section"><h3><code>Input</code></h3> <!></div> <div class="result-section"><h3><code>v1.randomize(topLeft, bottomRight)</code></h3> <!></div></div>`,1);function oe(P,X){j(X,!0);let l=z(_(new R(1,1))),c=z(_(new R(-3,3))),s=z(_(new R(3,-3))),V=a(()=>new Array(10).fill(0).map(()=>e(l).clone().randomize(e(c),e(s)).fixPrecision(5))),$=a(()=>new Array(10).fill(0).map(()=>e(l).clone().randomizeX(e(c),e(s)).fixPrecision(5))),M=a(()=>new Array(10).fill(0).map(()=>e(l).clone().randomizeY(e(c),e(s)).fixPrecision(5)));const m=a(()=>[{name:"v1",vec:e(l),color:"#0000FF",onUpdate:t=>{w(l,t.clone().fixPrecision(1),!0)},isDraggable:!0},{name:"topLeft",vec:e(c),color:"#00FF00",onUpdate:t=>{w(c,t.clone().fixPrecision(1),!0)},isDraggable:!0},{name:"bottomRight",vec:e(s),color:"#FF0000",onUpdate:t=>{w(s,t.clone().fixPrecision(1),!0)},isDraggable:!0}]),p=a(()=>[{name:"topLeft",vec:e(c),color:"#00FF00",isDraggable:!1},{name:"bottomRight",vec:e(s),color:"#FF0000",isDraggable:!1}]),k=a(()=>[...e(p),...e(V).map((t,v)=>({name:`random ${v+1}`,vec:t,color:"#b16ef4",isDraggable:!1}))]),q=a(()=>[...e(p),...e($).map((t,v)=>({name:`random ${v+1}`,vec:t,color:"#b16ef4",isDraggable:!1}))]),A=a(()=>[...e(p),...e(M).map((t,v)=>({name:`random ${v+1}`,vec:t,color:"#b16ef4",isDraggable:!1}))]),i={size:10,graduation:1};var x=K(),y=C(x);J(y,{title:"Randomization methods"});var h=o(y,12),g=r(h),I=o(r(g),2);n(I,{get grid(){return i},get vectors(){return e(m)}}),d(g);var F=o(g,2),U=o(r(F),2);n(U,{get grid(){return i},get vectors(){return e(q)}}),d(F),d(h);var u=o(h,2),f=r(u),E=o(r(f),2);n(E,{get grid(){return i},get vectors(){return e(m)}}),d(f);var L=o(f,2),O=o(r(L),2);n(O,{get grid(){return i},get vectors(){return e(A)}}),d(L),d(u);var D=o(u,2),b=r(D),S=o(r(b),2);n(S,{get grid(){return i},get vectors(){return e(m)}}),d(b);var Y=o(b,2),T=o(r(Y),2);n(T,{get grid(){return i},get vectors(){return e(k)}}),d(Y),d(D),G(P,x),H()}export{oe as component};
