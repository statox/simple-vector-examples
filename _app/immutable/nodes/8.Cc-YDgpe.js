import"../chunks/DsnmJJEf.js";import{D as O,Q as g,R as b,F as Q,G as a,I as R,J as j,K as A,M as E,z as e,S as H,O as i,B as D,P as d}from"../chunks/DUP_8v5R.js";import{a as r}from"../chunks/BVhCGFvA.js";import{V as F,M as L}from"../chunks/CfXP_IzQ.js";var N=Q('<h2>Distance</h2> <!> <div class="results svelte-1xfkyhs"><div><code>v1.absDistanceX(v2)</code></div> <div> </div> <div><code>v1.distanceX(v2)</code></div> <div> </div> <div><code>v1.absDistanceY(v2)</code></div> <div> </div> <div><code>v1.distanceY(v2)</code></div> <div> </div> <div><code>v1.distance(v2)</code></div> <div> </div> <div><code>v1.distanceSq(v2)</code></div> <div> </div> <div><code>v1.distanceManhattan(v2)</code></div> <div> </div> <div><code>v1.distanceChebyshev(v2)</code></div> <div> </div></div>',1);function ee(M,y){O(y,!0);let v=g(b(new F(0,5))),t=g(b(new F(2.5,0)));const X=H(()=>[{name:"v1",vec:e(v),color:"#00FF00",onUpdate:s=>{D(v,s.clone().fixPrecision(1),!0)},isDraggable:!0},{name:"v2",vec:e(t),color:"#FF0000",onUpdate:s=>{D(t,s.clone().fixPrecision(1),!0)},isDraggable:!0}]);var m=N(),x=a(R(m),2);L(x,{grid:{size:10,graduation:1},get vectors(){return e(X)}});var h=a(x,2),c=a(i(h),2),Y=i(c,!0);d(c);var o=a(c,4),P=i(o,!0);d(o);var n=a(o,4),S=i(n,!0);d(n);var _=a(n,4),q=i(_,!0);d(_);var u=a(_,4),w=i(u,!0);d(u);var l=a(u,4),z=i(l,!0);d(l);var p=a(l,4),C=i(p,!0);d(p);var f=a(p,4),U=i(f,!0);d(f),d(h),j((s,V,k,B,G,I,J,K)=>{r(Y,s),r(P,V),r(S,k),r(q,B),r(w,G),r(z,I),r(C,J),r(U,K)},[()=>e(v).absDistanceX(e(t)),()=>e(v).distanceX(e(t)),()=>e(v).absDistanceY(e(t)),()=>e(v).distanceY(e(t)),()=>e(v).distance(e(t)),()=>e(v).distanceSq(e(t)),()=>e(v).distanceManhattan(e(t)),()=>e(v).distanceChebyshev(e(t))]),A(M,m),E()}export{ee as component};
