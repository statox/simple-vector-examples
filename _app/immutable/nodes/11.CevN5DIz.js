import"../chunks/DsnmJJEf.js";import{p as $,s as h,a as b,f as y,b as M,c as _,d as x,e as u,g as t,u as o,h as C}from"../chunks/DN2LkAR_.js";import{M as I}from"../chunks/jorisKKQ.js";import{M as P}from"../chunks/y-0iLokV.js";import{M as j}from"../chunks/BnX5XO6O.js";import{V as A}from"../chunks/Gnf6quZY.js";var O=y("<!> <!> <!>",1);function U(i,c){$(c,!0);let e=h(b(new A(0,2.5)));const l=o(()=>`"${t(e).toString()}"`),d=o(()=>{const r=t(e).toArray();return`[${r[0]}, ${r[1]}]`}),g=o(()=>{const r=t(e).toObject();return`{x: ${r.x}, y: ${r.y}}`}),p=o(()=>{const r=t(e).toPolar();return`{r: ${r.r}, theta: ${r.theta}}`}),m=o(()=>[{name:"v",vec:t(e),color:"#00FF00",onUpdate:r=>{C(e,r.clone().fixPrecision(1),!0)},isDraggable:!0}]),v=o(()=>[{code:"v.toString()",result:t(l),resultIsCode:!0},{code:"v.toArray()",result:t(d),resultIsCode:!0},{code:"v.toObject()",result:t(g),resultIsCode:!0},{code:"v.toPolar()",result:t(p),resultIsCode:!0}]);var s=O(),a=M(s);P(a,{title:"Constructor methods"});var n=u(a,2);j(n,{grid:{size:10,graduation:1},get vectors(){return t(m)}});var f=u(n,2);I(f,{get results(){return t(v)}}),_(i,s),x()}export{U as component};
