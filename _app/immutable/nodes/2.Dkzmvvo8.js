import"../chunks/DsnmJJEf.js";import"../chunks/WlWXf2W6.js";import{p as ca,f as ma,e as r,b as fa,_ as _a,c as ua,d as da,$ as a,a0 as i,z as ga}from"../chunks/DN2LkAR_.js";import{s as e}from"../chunks/BCauGnmc.js";import{i as ba}from"../chunks/BWu0hTpX.js";import{r as t}from"../chunks/BxWGLqyi.js";var xa=ma('<p>This page gathers some interactive examples for the npm package <a href="https://www.npmjs.com/package/simple-vector" rel="nofollow"><code>simple-vector</code></a>. You can find the complete documentation on <a href="https://statox.github.io/simple-vector.ts/index.html" rel="nofollow">this page</a>.</p> <p>In the visualizations drag the red and green vectors which are used as input vectors and observe how the other vectors or the numerical results evolve as you change the inputs.</p> <p>The examples are sorted by method category:</p> <ul><li><a>Angle</a></li> <li><a>AngleWith</a></li> <li><a>Arithmetic - Addition</a></li> <li><a>Arithmetic - Division</a></li> <li><a>Arithmetic - Multiplication</a></li> <li><a>Arithmetic - Subtraction</a></li> <li><a>Clamp</a></li> <li><a>Comparison</a></li> <li><a>Constructors</a></li> <li><a>Distance</a></li> <li><a>Interpolation</a></li> <li><a>Inversion</a></li> <li><a>Limit</a></li> <li><a>Magnitude</a></li> <li><a>Product</a></li> <li><a>Randomization</a></li> <li><a>Reflect</a></li> <li><a>Resize</a></li> <li><a>Rotation</a></li></ul> <p>If you find an error please fill an issue <a href="https://github.com/statox/simple-vector-examples/issues" rel="nofollow">on Github</a>.</p>',1);function wa(l,C){ca(C,!1),ba();var y=xa(),I=r(fa(y),6),o=a(I),M=a(o);i(o);var s=r(o,2),k=a(s);i(s);var n=r(s,2),D=a(n);i(n);var h=r(n,2),T=a(h);i(h);var v=r(h,2),W=a(v);i(v);var p=r(v,2),j=a(p);i(p);var c=r(p,2),G=a(c);i(c);var m=r(c,2),L=a(m);i(m);var f=r(m,2),P=a(f);i(f);var _=r(f,2),S=a(_);i(_);var u=r(_,2),Y=a(u);i(u);var d=r(u,2),$=a(d);i(d);var g=r(d,2),q=a(g);i(g);var b=r(g,2),B=a(b);i(b);var x=r(b,2),E=a(x);i(x);var w=r(x,2),F=a(w);i(w);var A=r(w,2),H=a(A);i(A);var z=r(A,2),J=a(z);i(z);var R=r(z,2),K=a(R);i(R),i(I),ga(2),_a((N,O,Q,U,V,X,Z,aa,ia,ra,ea,ta,la,oa,sa,na,ha,va,pa)=>{e(M,"href",N),e(k,"href",O),e(D,"href",Q),e(T,"href",U),e(W,"href",V),e(j,"href",X),e(G,"href",Z),e(L,"href",aa),e(P,"href",ia),e(S,"href",ra),e(Y,"href",ea),e($,"href",ta),e(q,"href",la),e(B,"href",oa),e(E,"href",sa),e(F,"href",na),e(H,"href",ha),e(J,"href",va),e(K,"href",pa)},[()=>t("/angle"),()=>t("/angleWith"),()=>t("/arithmetic/add"),()=>t("/arithmetic/divide"),()=>t("/arithmetic/multiply"),()=>t("/arithmetic/subtract"),()=>t("/clamp"),()=>t("/comparison"),()=>t("/constructors"),()=>t("/distance"),()=>t("/interpolation"),()=>t("/inversion"),()=>t("/limit"),()=>t("/magnitude"),()=>t("/product"),()=>t("/randomization"),()=>t("/reflect"),()=>t("/resize"),()=>t("/rotation")]),ua(l,y),da()}function Ma(l){wa(l,{})}export{Ma as component};
