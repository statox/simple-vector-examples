import"../chunks/DsnmJJEf.js";import{D as F,Q as M,R as V,F as P,G as t,I as q,K as w,M as y,O as o,z as e,S as r,P as n,B}from"../chunks/D3IAL-Rx.js";import{M as d,V as G}from"../chunks/DDJoUMY1.js";var K=P('<h2>Inversion</h2> <div class="results svelte-6zq5v2"><div><h3><code>v1.invert()</code></h3> <!></div> <div><h3><code>v1.invertX()</code></h3> <!></div> <div><h3><code>v1.invertY()</code></h3> <!></div></div>',1);function S(u,m){F(m,!0);let v=M(V(new G(0,3))),p=r(()=>e(v).clone().invert()),h=r(()=>e(v).clone().invertX()),_=r(()=>e(v).clone().invertY());const s=r(()=>[{name:"v1",vec:e(v),color:"#00FF00",onUpdate:z=>{B(v,z.clone().fixPrecision(1),!0)},isDraggable:!0}]),b=r(()=>[...e(s),{name:"v1.invert()",vec:e(p),color:"#6e6ef4",isDraggable:!1}]),D=r(()=>[...e(s),{name:"v1.invertX()",vec:e(h),color:"#f46ef4",isDraggable:!1}]),I=r(()=>[...e(s),{name:"v1.invertY()",vec:e(_),color:"#b16ef4",isDraggable:!1}]),a={size:10,graduation:1};var l=K(),g=t(q(l),2),i=o(g),X=t(o(i),2);d(X,{get grid(){return a},get vectors(){return e(b)}}),n(i);var c=t(i,2),Y=t(o(c),2);d(Y,{get grid(){return a},get vectors(){return e(D)}}),n(c);var f=t(c,2),x=t(o(f),2);d(x,{get grid(){return a},get vectors(){return e(I)}}),n(f),n(g),w(u,l),y()}export{S as component};
