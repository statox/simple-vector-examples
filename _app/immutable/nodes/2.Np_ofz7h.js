import"../chunks/DsnmJJEf.js";import{i as X}from"../chunks/OT4hqeG4.js";import{z as Z,A as $,B as i,C as aa,D as ea,F as ia,G as ra,I as a,J as e,K as ta}from"../chunks/B6V4Mh0Q.js";import{r,s as t}from"../chunks/nSUsuyja.js";var oa=$('<p>This page gathers some interactive examples for the npm package <a href="https://www.npmjs.com/package/simple-vector" rel="nofollow"><code>simple-vector</code></a>. You can find the complete documentation on <a href="https://statox.github.io/simple-vector.ts/index.html" rel="nofollow">this page</a>.</p> <p>In the visualizations drag the red and green vectors which are used as input vectors and observe how the other vectors or the numerical results evolve as you change the inputs.</p> <ul><li><a>Angle methods</a></li> <li><a>AngleWith methods</a></li> <li><a>Clamp methods</a></li> <li><a>Comparison methods</a></li> <li><a>Constructors methods</a></li> <li><a>Distance methods</a></li> <li><a>Interpolation methods</a></li> <li><a>Inversion methods</a></li> <li><a>Limit methods</a></li> <li><a>Product methods</a></li> <li><a>Randomization methods</a></li> <li><a>Reflect methods</a></li> <li><a>Resize methods</a></li> <li><a>Rotation methods</a></li></ul> <p>If you find an error please fill an issue <a href="https://github.com/statox/simple-vector-examples/issues" rel="nofollow">on Github</a>.</p>',1);function la(o,z){Z(z,!1),X();var w=oa(),x=i(aa(w),4),l=a(x),I=a(l);e(l);var s=i(l,2),C=a(s);e(s);var n=i(s,2),R=a(n);e(n);var h=i(n,2),A=a(h);e(h);var m=i(h,2),k=a(m);e(m);var v=i(m,2),y=a(v);e(v);var p=i(v,2),D=a(p);e(p);var f=i(p,2),G=a(f);e(f);var c=i(f,2),W=a(c);e(c);var d=i(c,2),j=a(d);e(d);var _=i(d,2),B=a(_);e(_);var u=i(_,2),F=a(u);e(u);var g=i(u,2),J=a(g);e(g);var b=i(g,2),K=a(b);e(b),e(x),ta(2),ea((L,M,P,T,Y,q,E,H,N,O,Q,S,U,V)=>{t(I,"href",L),t(C,"href",M),t(R,"href",P),t(A,"href",T),t(k,"href",Y),t(y,"href",q),t(D,"href",E),t(G,"href",H),t(W,"href",N),t(j,"href",O),t(B,"href",Q),t(F,"href",S),t(J,"href",U),t(K,"href",V)},[()=>r("/angle"),()=>r("/angleWith"),()=>r("/clamp"),()=>r("/comparison"),()=>r("/constructors"),()=>r("/distance"),()=>r("/interpolation"),()=>r("/inversion"),()=>r("/limit"),()=>r("/product"),()=>r("/randomization"),()=>r("/reflect"),()=>r("/resize"),()=>r("/rotation")]),ia(o,w),ra()}function va(o){la(o,{})}export{va as component};
