import"../chunks/DsnmJJEf.js";import"../chunks/BCFSpFHz.js";import{p as V,f as X,e as r,b as Z,_ as aa,c as ea,d as ra,$ as a,a0 as e,z as ia}from"../chunks/CY1iBhr2.js";import{s as i}from"../chunks/cAKsN3DC.js";import{i as ta}from"../chunks/yo-OyfLa.js";import{r as t}from"../chunks/CvR-6Jim.js";var la=X('<p>This page gathers some interactive examples for the npm package <a href="https://www.npmjs.com/package/simple-vector" rel="nofollow"><code>simple-vector</code></a>. You can find the complete documentation on <a href="https://statox.github.io/simple-vector.ts/index.html" rel="nofollow">this page</a>.</p> <p>In the visualizations drag the red and green vectors which are used as input vectors and observe how the other vectors or the numerical results evolve as you change the inputs.</p> <p>The examples are sorted by method category:</p> <ul><li><a>Angle</a></li> <li><a>AngleWith</a></li> <li><a>Clamp</a></li> <li><a>Comparison</a></li> <li><a>Constructors</a></li> <li><a>Distance</a></li> <li><a>Interpolation</a></li> <li><a>Inversion</a></li> <li><a>Limit</a></li> <li><a>Product</a></li> <li><a>Randomization</a></li> <li><a>Reflect</a></li> <li><a>Resize</a></li> <li><a>Rotation</a></li></ul> <p>If you find an error please fill an issue <a href="https://github.com/statox/simple-vector-examples/issues" rel="nofollow">on Github</a>.</p>',1);function oa(l,z){V(z,!1),ta();var x=la(),b=r(Z(x),6),o=a(b),y=a(o);e(o);var s=r(o,2),I=a(s);e(s);var n=r(s,2),R=a(n);e(n);var p=r(n,2),C=a(p);e(p);var h=r(p,2),k=a(h);e(h);var v=r(h,2),A=a(v);e(v);var f=r(v,2),T=a(f);e(f);var m=r(f,2),W=a(m);e(m);var c=r(m,2),j=a(c);e(c);var _=r(c,2),D=a(_);e(_);var u=r(_,2),G=a(u);e(u);var d=r(u,2),L=a(d);e(d);var g=r(d,2),M=a(g);e(g);var w=r(g,2),P=a(w);e(w),e(b),ia(2),aa((Y,$,q,B,E,F,H,J,K,N,O,Q,S,U)=>{i(y,"href",Y),i(I,"href",$),i(R,"href",q),i(C,"href",B),i(k,"href",E),i(A,"href",F),i(T,"href",H),i(W,"href",J),i(j,"href",K),i(D,"href",N),i(G,"href",O),i(L,"href",Q),i(M,"href",S),i(P,"href",U)},[()=>t("/angle"),()=>t("/angleWith"),()=>t("/clamp"),()=>t("/comparison"),()=>t("/constructors"),()=>t("/distance"),()=>t("/interpolation"),()=>t("/inversion"),()=>t("/limit"),()=>t("/product"),()=>t("/randomization"),()=>t("/reflect"),()=>t("/resize"),()=>t("/rotation")]),ea(l,x),ra()}function ma(l){oa(l,{})}export{ma as component};
