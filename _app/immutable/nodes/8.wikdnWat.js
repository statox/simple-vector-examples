import"../chunks/DsnmJJEf.js";import{p as b,s as i,a as c,f as M,b as D,c as _,d as x,e as d,g as e,u as v,h as l}from"../chunks/DN2LkAR_.js";import{M as F}from"../chunks/7860GnDv.js";import{M as X}from"../chunks/cuXCgmmQ.js";import{M as Y}from"../chunks/ufBmqpCX.js";import{V as u}from"../chunks/Gnf6quZY.js";var y=M("<!> <!> <!>",1);function V(m,p){b(p,!0);let t=i(c(new u(0,5))),s=i(c(new u(2.5,0)));const g=v(()=>[{name:"v1",vec:e(t),color:"#00FF00",onUpdate:a=>{l(t,a.clone().fixPrecision(1),!0)},isDraggable:!0},{name:"v2",vec:e(s),color:"#FF0000",onUpdate:a=>{l(s,a.clone().fixPrecision(1),!0)},isDraggable:!0}]),f=v(()=>[{code:"v1.absDistanceX(v2)",result:e(t).absDistanceX(e(s))},{code:"v1.distanceX(v2)",result:e(t).distanceX(e(s))},{code:"v1.absDistanceY(v2)",result:e(t).absDistanceY(e(s))},{code:"v1.distanceY(v2)",result:e(t).distanceY(e(s))},{code:"v1.distance(v2)",result:e(t).distance(e(s))},{code:"v1.distanceSq(v2)",result:e(t).distanceSq(e(s))},{code:"v1.distanceManhattan(v2)",result:e(t).distanceManhattan(e(s))},{code:"v1.distanceChebyshev(v2)",result:e(t).distanceChebyshev(e(s))}]);var r=y(),n=D(r);X(n,{title:"Distance methods"});var o=d(n,2);Y(o,{grid:{size:10,graduation:1},get vectors(){return e(g)}});var h=d(o,2);F(h,{get results(){return e(f)}}),_(m,r),x()}export{V as component};
