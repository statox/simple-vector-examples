import"../chunks/DsnmJJEf.js";import{z as R,L as C,M as F,A as S,C as W,D as X,F as Y,G as ee,B as i,v as e,N as se,I as a,x as M,J as v}from"../chunks/B6V4Mh0Q.js";import{a as t}from"../chunks/Dkdr-M-y.js";import{s as o}from"../chunks/Nfr14FuH.js";import{V as b,M as re,a as ie}from"../chunks/C6RbSxQY.js";var ae=S('<!> <!> <div class="results svelte-1hwsqd4"><div><code>v1.isEqualTo(v2)</code></div> <div> </div> <div><code>v1.isCloseTo(v2, 0.2)</code></div> <div> </div> <div><code>v1.isParallelTo(v2)</code></div> <div> </div> <div><code>v1.isPerpendicularTo(v2)</code></div> <div> </div> <div><code>v1.isZero()</code></div> <div> </div> <div><code>v2.isZero()</code></div> <div> </div></div>',1);function ce(D,E){R(E,!0);let s=C(F(new b(2.5,0))),r=C(F(new b(0,5)));const z=se(()=>[{name:"v1",vec:e(s),color:"#00FF00",onUpdate:d=>{M(s,d.clone().fixPrecision(1),!0)},isDraggable:!0},{name:"v2",vec:e(r),color:"#FF0000",onUpdate:d=>{M(r,d.clone().fixPrecision(1),!0)},isDraggable:!0}]);var m=ae(),g=W(m);re(g,{title:"Comparison methods"});var f=i(g,2);ie(f,{grid:{size:10,graduation:1},get vectors(){return e(z)}});var h=i(f,2),l=i(a(h),2);let x;var U=a(l,!0);v(l);var c=i(l,4);let T;var V=a(c,!0);v(c);var n=i(c,4);let q;var y=a(n,!0);v(n);var u=i(n,4);let w;var A=a(u,!0);v(u);var _=i(u,4);let P;var B=a(_,!0);v(_);var p=i(_,4);let Z;var G=a(p,!0);v(p),v(h),X((d,I,J,L,N,$,j,k,H,K,O,Q)=>{x=o(l,1,"svelte-1hwsqd4",null,x,d),t(U,I),T=o(c,1,"svelte-1hwsqd4",null,T,J),t(V,L),q=o(n,1,"svelte-1hwsqd4",null,q,N),t(y,$),w=o(u,1,"svelte-1hwsqd4",null,w,j),t(A,k),P=o(_,1,"svelte-1hwsqd4",null,P,H),t(B,K),Z=o(p,1,"svelte-1hwsqd4",null,Z,O),t(G,Q)},[()=>({green:e(s).isEqualTo(e(r))}),()=>e(s).isEqualTo(e(r)),()=>({green:e(s).isCloseTo(e(r),.2)}),()=>e(s).isCloseTo(e(r),.2),()=>({green:e(s).isParallelTo(e(r))}),()=>e(s).isParallelTo(e(r)),()=>({green:e(s).isPerpendicularTo(e(r))}),()=>e(s).isPerpendicularTo(e(r)),()=>({green:e(s).isZero()}),()=>e(s).isZero(),()=>({green:e(r).isZero()}),()=>e(r).isZero()]),Y(D,m),ee()}export{ce as component};
