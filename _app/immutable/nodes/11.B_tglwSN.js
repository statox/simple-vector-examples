import"../chunks/DsnmJJEf.js";import{z as H,L as h,M as K,A as O,C as Q,D as R,v as e,F as S,G as T,B as o,I as a,N as s,x as $,J as i}from"../chunks/B6V4Mh0Q.js";import{a as b}from"../chunks/Dkdr-M-y.js";import{a as F}from"../chunks/DC2XFRZl.js";import{b as V}from"../chunks/B7KanJoJ.js";import{V as W,M as Z,a as x}from"../chunks/CPznaXQM.js";var ee=O('<!> <span>max</span><input type="number"/> <span>factor</span> <input type="number"/> <div class="results svelte-6zq5v2"><div><h3><code> </code></h3> <!></div> <div><h3><code> </code></h3> <!></div> <div><h3><code> </code></h3> <!></div></div>',1);function ve(q,w){H(w,!0);let t=h(2),r=h(.5),v=h(K(new W(3,3))),A=s(()=>e(v).clone().limit(e(t),e(r))),B=s(()=>e(v).clone().limitX(e(t),e(r))),C=s(()=>e(v).clone().limitY(e(t),e(r)));const l=s(()=>[{name:"v1",vec:e(v),color:"#00FF00",onUpdate:n=>{$(v,n.clone().fixPrecision(1),!0)},isDraggable:!0}]),G=s(()=>[...e(l),{name:`v1.limit(${e(t)}, ${e(r)})`,vec:e(A),color:"#6e6ef4",isDraggable:!1}]),I=s(()=>[...e(l),{name:`v1.limitX(${e(t)}, ${e(r)})`,vec:e(B),color:"#b16ef4",isDraggable:!1}]),J=s(()=>[...e(l),{name:`v1.limitY(${e(t)}, ${e(r)})`,vec:e(C),color:"#6eb1f4",isDraggable:!1}]),c={size:10,graduation:1};var D=ee(),L=Q(D);Z(L,{title:"Limit methods"});var d=o(L,3);F(d);var m=o(d,4);F(m);var X=o(m,2),p=a(X),g=a(p),Y=a(g),N=a(Y);i(Y),i(g);var P=o(g,2);x(P,{get grid(){return c},get vectors(){return e(G)}}),i(p);var u=o(p,2),_=a(u),M=a(_),U=a(M);i(M),i(_);var j=o(_,2);x(j,{get grid(){return c},get vectors(){return e(I)}}),i(u);var y=o(u,2),f=a(y),z=a(f),k=a(z);i(z),i(f);var E=o(f,2);x(E,{get grid(){return c},get vectors(){return e(J)}}),i(y),i(X),R(()=>{b(N,`v1.limit(${e(t)??""}, ${e(r)??""})`),b(U,`v1.limitX(${e(t)??""}, ${e(r)??""})`),b(k,`v1.limitY(${e(t)??""}, ${e(r)??""})`)}),V(d,()=>e(t),n=>$(t,n)),V(m,()=>e(r),n=>$(r,n)),S(q,D),T()}export{ve as component};
