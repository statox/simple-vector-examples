import"../chunks/DsnmJJEf.js";import{p as x,s as d,a as g,f as F,b as M,c as _,d as D,e as a,g as e,u as v,h as c}from"../chunks/DN2LkAR_.js";import{M as A}from"../chunks/EWXXli4_.js";import{M as b}from"../chunks/jorisKKQ.js";import{M as $}from"../chunks/y-0iLokV.js";import{M as w}from"../chunks/BnX5XO6O.js";import{V as m}from"../chunks/Gnf6quZY.js";var P=F("<!> <!> <!> <!>",1);function B(p,u){x(u,!0);let t=d(g(new m(0,5))),r=d(g(new m(2.5,0)));const h=v(()=>[{name:"v1",vec:e(t),color:"#00FF00",onUpdate:o=>{c(t,o.clone().fixPrecision(1),!0)},isDraggable:!0},{name:"v2",vec:e(r),color:"#FF0000",onUpdate:o=>{c(r,o.clone().fixPrecision(1),!0)},isDraggable:!0}]),f=v(()=>[{code:"v1.angleWith(v2)",result:e(t).angleWith(e(r)).toFixed(3)},{code:"v1.orientedAngleWith(v2)",result:e(t).orientedAngleWith(e(r)).toFixed(3)},{code:"v1.angleDegWith(v2)",result:e(t).angleDegWith(e(r)).toFixed(0)},{code:"v1.orientedAngleDegWith(v2)",result:e(t).orientedAngleDegWith(e(r)).toFixed(0)}]);var i=P(),n=M(i);$(n,{title:"AngleWith methods"});var s=a(n,2);w(s,{grid:{size:10,graduation:1},get vectors(){return e(h)}});var l=a(s,2);b(l,{get results(){return e(f)}});var W=a(l,2);A(W),_(p,i),D()}export{B as component};
