import"../chunks/DsnmJJEf.js";import{S as G,_ as h,$ as H,l as I,V as J,W as K,C as e,m as N,X as O,T as o,Y as a,a0 as s,F as $,Z as i}from"../chunks/DPwOY9Ev.js";import{a as b}from"../chunks/CVJGeIlM.js";import{r as F}from"../chunks/DCuQ9oNW.js";import{b as z}from"../chunks/BVHbt_mF.js";import{M as Q}from"../chunks/D9YKBaSm.js";import{M as x}from"../chunks/B17B5uQ6.js";import{V as R}from"../chunks/COKwq80w.js";var ee=I('<!> <span>max</span><input type="number"/> <span>factor</span> <input type="number"/> <div class="results svelte-6zq5v2"><div><h3><code> </code></h3> <!></div> <div><h3><code> </code></h3> <!></div> <div><h3><code> </code></h3> <!></div></div>',1);function me(q,w){G(w,!0);let t=h(2),r=h(.5),v=h(H(new R(3,3))),C=s(()=>e(v).clone().limit(e(t),e(r))),P=s(()=>e(v).clone().limitX(e(t),e(r))),S=s(()=>e(v).clone().limitY(e(t),e(r)));const m=s(()=>[{name:"v1",vec:e(v),color:"#00FF00",onUpdate:n=>{$(v,n.clone().fixPrecision(1),!0)},isDraggable:!0}]),T=s(()=>[...e(m),{name:`v1.limit(${e(t)}, ${e(r)})`,vec:e(C),color:"#6e6ef4",isDraggable:!1}]),U=s(()=>[...e(m),{name:`v1.limitX(${e(t)}, ${e(r)})`,vec:e(P),color:"#b16ef4",isDraggable:!1}]),W=s(()=>[...e(m),{name:`v1.limitY(${e(t)}, ${e(r)})`,vec:e(S),color:"#6eb1f4",isDraggable:!1}]),l={size:10,graduation:1};var X=ee(),Y=J(X);Q(Y,{title:"Limit methods"});var c=o(Y,3);F(c);var d=o(c,4);F(d);var D=o(d,2),p=a(D),f=a(p),L=a(f),Z=a(L);i(L),i(f);var j=o(f,2);x(j,{get grid(){return l},get vectors(){return e(T)}}),i(p);var g=o(p,2),u=a(g),M=a(u),k=a(M);i(M),i(u);var A=o(u,2);x(A,{get grid(){return l},get vectors(){return e(U)}}),i(g);var V=o(g,2),_=a(V),y=a(_),B=a(y);i(y),i(_);var E=o(_,2);x(E,{get grid(){return l},get vectors(){return e(W)}}),i(V),i(D),K(()=>{b(Z,`v1.limit(${e(t)??""}, ${e(r)??""})`),b(k,`v1.limitX(${e(t)??""}, ${e(r)??""})`),b(B,`v1.limitY(${e(t)??""}, ${e(r)??""})`)}),z(c,()=>e(t),n=>$(t,n)),z(d,()=>e(r),n=>$(r,n)),N(q,X),O()}export{me as component};
