import"../chunks/DsnmJJEf.js";import{p as K,s as h,a as N,f as O,b as Q,_ as R,g as e,c as S,d as T,e as o,$ as a,u as s,h as $,a0 as i}from"../chunks/DN2LkAR_.js";import{a as b}from"../chunks/BenD77kU.js";import{r as z}from"../chunks/BCauGnmc.js";import{b as F}from"../chunks/CfHCFXmM.js";import{M as W}from"../chunks/Bp2XcCn2.js";import{M as x}from"../chunks/ufBmqpCX.js";import{V as Z}from"../chunks/Gnf6quZY.js";var ee=O('<!> <span>max</span><input type="number"/> <span>factor</span> <input type="number"/> <div class="results svelte-6zq5v2"><div><h3><code> </code></h3> <!></div> <div><h3><code> </code></h3> <!></div> <div><h3><code> </code></h3> <!></div></div>',1);function me(q,w){K(w,!0);let t=h(2),r=h(.5),v=h(N(new Z(3,3))),P=s(()=>e(v).clone().limit(e(t),e(r))),U=s(()=>e(v).clone().limitX(e(t),e(r))),j=s(()=>e(v).clone().limitY(e(t),e(r)));const m=s(()=>[{name:"v1",vec:e(v),color:"#00FF00",onUpdate:n=>{$(v,n.clone().fixPrecision(1),!0)},isDraggable:!0}]),k=s(()=>[...e(m),{name:`v1.limit(${e(t)}, ${e(r)})`,vec:e(P),color:"#6e6ef4",isDraggable:!1}]),A=s(()=>[...e(m),{name:`v1.limitX(${e(t)}, ${e(r)})`,vec:e(U),color:"#b16ef4",isDraggable:!1}]),B=s(()=>[...e(m),{name:`v1.limitY(${e(t)}, ${e(r)})`,vec:e(j),color:"#6eb1f4",isDraggable:!1}]),c={size:10,graduation:1};var X=ee(),Y=Q(X);W(Y,{title:"Limit methods"});var l=o(Y,3);z(l);var d=o(l,4);z(d);var D=o(d,2),p=a(D),f=a(p),L=a(f),C=a(L);i(L),i(f);var E=o(f,2);x(E,{get grid(){return c},get vectors(){return e(k)}}),i(p);var g=o(p,2),u=a(g),M=a(u),G=a(M);i(M),i(u);var H=o(u,2);x(H,{get grid(){return c},get vectors(){return e(A)}}),i(g);var y=o(g,2),_=a(y),V=a(_),I=a(V);i(V),i(_);var J=o(_,2);x(J,{get grid(){return c},get vectors(){return e(B)}}),i(y),i(D),R(()=>{b(C,`v1.limit(${e(t)??""}, ${e(r)??""})`),b(G,`v1.limitX(${e(t)??""}, ${e(r)??""})`),b(I,`v1.limitY(${e(t)??""}, ${e(r)??""})`)}),F(l,()=>e(t),n=>$(t,n)),F(d,()=>e(r),n=>$(r,n)),S(q,X),T()}export{me as component};
