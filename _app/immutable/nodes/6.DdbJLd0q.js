import"../chunks/DsnmJJEf.js";import{p as T,s as l,a as n,f as P,b as M,c as Z,d as _,e as c,g as e,u,h as g}from"../chunks/CY1iBhr2.js";import{M as b}from"../chunks/Crpug-8D.js";import{M as x}from"../chunks/Bv3YwKo1.js";import{M as C}from"../chunks/Co6q3R2A.js";import{V as v}from"../chunks/DnDkWYNL.js";var F=P("<!> <!> <!>",1);function $(h,d){T(d,!0);let o=l(n(new v(2.5,0))),r=l(n(new v(0,5)));const p=u(()=>[{name:"v1",vec:e(o),color:"#00FF00",onUpdate:s=>{g(o,s.clone().fixPrecision(1),!0)},isDraggable:!0},{name:"v2",vec:e(r),color:"#FF0000",onUpdate:s=>{g(r,s.clone().fixPrecision(1),!0)},isDraggable:!0}]),m=u(()=>[{code:"v1.isEqualTo(v2)",result:e(o).isEqualTo(e(r)),highlight:e(o).isEqualTo(e(r))},{code:"v1.isCloseTo(v2, 0.2)",result:e(o).isCloseTo(e(r),.2),highlight:e(o).isCloseTo(e(r),.2)},{code:"v1.isParallelTo(v2)",result:e(o).isParallelTo(e(r)),highlight:e(o).isParallelTo(e(r))},{code:"v1.isPerpendicularTo(v2)",result:e(o).isPerpendicularTo(e(r)),highlight:e(o).isPerpendicularTo(e(r))},{code:"v1.isZero()",result:e(o).isZero(),highlight:e(o).isZero()},{code:"v2.isZero()",result:e(r).isZero(),highlight:e(r).isZero()}]);var i=F(),t=M(i);x(t,{title:"Comparison methods"});var a=c(t,2);C(a,{grid:{size:10,graduation:1},get vectors(){return e(p)}});var f=c(a,2);b(f,{get results(){return e(m)}}),Z(h,i),_()}export{$ as component};
