import"../chunks/DsnmJJEf.js";import"../chunks/OT4hqeG4.js";import{z as w,L as _,M as A,A as M,B as a,C as y,D as B,v as e,F as D,G as C,I as o,N as s,x as b,J as i}from"../chunks/B6V4Mh0Q.js";import{V as G,a as x,M as I}from"../chunks/C6RbSxQY.js";import{a as J}from"../chunks/Dkdr-M-y.js";import{a as P}from"../chunks/nSUsuyja.js";import{b as U}from"../chunks/B7KanJoJ.js";var j=M('<h3>Length</h3> <div class="results svelte-6zq5v2"><div><h3><code> </code></h3> <span>Resized magnitude</span><input type="number"/> <!></div> <div><h3><code>v1.normalize()</code></h3> <!></div></div>',1);function k(v,n){w(n,!0);let r=_(2),t=_(A(new G(3,3))),$=s(()=>{try{return e(t).clone().normalize()}catch{return e(t).clone().zero()}}),F=s(()=>{try{return e(t).clone().resize(e(r))}catch{return e(t).clone().zero()}});const p=s(()=>[{name:"v1",vec:e(t),color:"#00FF00",onUpdate:m=>{b(t,m.clone().fixPrecision(1),!0)},isDraggable:!0}]),L=s(()=>[...e(p),{name:"v1.normalize()",vec:e($),color:"#6e6ef4",isDraggable:!1}]),R=s(()=>[...e(p),{name:`v1.resize(${e(r)})`,vec:e(F),color:"#b16ef4",isDraggable:!1}]),u={size:10,graduation:1};var g=j(),f=a(y(g),2),c=o(f),d=o(c),z=o(d),V=o(z);i(z),i(d);var l=a(d,3);P(l);var N=a(l,2);x(N,{get grid(){return u},get vectors(){return e(R)}}),i(c);var h=a(c,2),q=a(o(h),2);x(q,{get grid(){return u},get vectors(){return e(L)}}),i(h),i(f),B(()=>J(V,`v1.resize(${e(r)??""})`)),U(l,()=>e(r),m=>b(r,m)),D(v,g),C()}var E=M("<!> <!>",1);function X(v){var n=E(),r=y(n);I(r,{title:"Resize methods"});var t=a(r,2);k(t,{}),D(v,n)}export{X as component};
