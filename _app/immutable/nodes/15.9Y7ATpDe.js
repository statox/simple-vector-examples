import"../chunks/DsnmJJEf.js";import{z as q,L as _,M as w,A,C as B,D as C,v as e,F as G,G as I,B as t,I as s,N as o,x as h,J as i}from"../chunks/B6V4Mh0Q.js";import{a as J}from"../chunks/Dkdr-M-y.js";import{a as L}from"../chunks/DC2XFRZl.js";import{b as P}from"../chunks/B7KanJoJ.js";import{V as U,M as j,a as b}from"../chunks/CPznaXQM.js";var k=A('<!> <div class="results svelte-6zq5v2"><div><h3><code> </code></h3> <span>Resized magnitude</span><input type="number"/> <!></div> <div><h3><code>v1.normalize()</code></h3> <!></div></div>',1);function T(x,M){q(M,!0);let a=_(2),r=_(w(new U(3,3))),y=o(()=>{try{return e(r).clone().normalize()}catch{return e(r).clone().zero()}}),D=o(()=>{try{return e(r).clone().resize(e(a))}catch{return e(r).clone().zero()}});const l=o(()=>[{name:"v1",vec:e(r),color:"#00FF00",onUpdate:d=>{h(r,d.clone().fixPrecision(1),!0)},isDraggable:!0}]),F=o(()=>[...e(l),{name:"v1.normalize()",vec:e(y),color:"#6e6ef4",isDraggable:!1}]),R=o(()=>[...e(l),{name:`v1.resize(${e(a)})`,vec:e(D),color:"#b16ef4",isDraggable:!1}]),m={size:10,graduation:1};var p=k(),u=B(p);j(u,{title:"Resize methods"});var g=t(u,2),n=s(g),v=s(n),z=s(v),V=s(z);i(z),i(v);var c=t(v,3);L(c);var $=t(c,2);b($,{get grid(){return m},get vectors(){return e(R)}}),i(n);var f=t(n,2),N=t(s(f),2);b(N,{get grid(){return m},get vectors(){return e(F)}}),i(f),i(g),C(()=>J(V,`v1.resize(${e(a)??""})`)),P(c,()=>e(a),d=>h(a,d)),G(x,p),I()}export{T as component};
