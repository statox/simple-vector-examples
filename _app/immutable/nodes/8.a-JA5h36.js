import"../chunks/DsnmJJEf.js";import{p as w,u as z,v as F,f as M,e as t,i as k,k as q,l as y,o,c as e,w as r,r as s,s as P}from"../chunks/BpBy4irg.js";import{M as d,V as U}from"../chunks/Dicey4yO.js";var j=M('<h2>Inversion</h2> <div class="results svelte-6zq5v2"><div><h3><code>v1.invert()</code></h3> <!></div> <div><h3><code>v1.invertX()</code></h3> <!></div> <div><h3><code>v1.invertY()</code></h3> <!></div></div>',1);function E(u,p){w(p,!0);let v=z(F(new U(0,3))),m=r(()=>e(v).clone().invert()),h=r(()=>e(v).clone().invertX()),_=r(()=>e(v).clone().invertY());const n=r(()=>[{name:"v1",vec:e(v),color:"#00FF00",onUpdate:V=>{P(v,V.clone().fixPrecision(1),!0)},isDraggable:!0}]),b=r(()=>[...e(n),{name:"v1.invert()",vec:e(m),color:"#6e6ef4",isDraggable:!1}]),X=r(()=>[...e(n),{name:"v1.invertX()",vec:e(h),color:"#f46ef4",isDraggable:!1}]),Y=r(()=>[...e(n),{name:"v1.invertY()",vec:e(_),color:"#b16ef4",isDraggable:!1}]),a={size:10,graduation:1};var l=j(),g=t(k(l),2),i=o(g),D=t(o(i),2);d(D,{get grid(){return a},get vectors(){return e(b)}}),s(i);var c=t(i,2),I=t(o(c),2);d(I,{get grid(){return a},get vectors(){return e(X)}}),s(c);var f=t(c,2),x=t(o(f),2);d(x,{get grid(){return a},get vectors(){return e(Y)}}),s(f),s(g),q(u,l),y()}export{E as component};
