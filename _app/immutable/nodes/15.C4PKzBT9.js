import"../chunks/DsnmJJEf.js";import{S as w,_,$ as C,l as N,V as P,W as S,C as e,m as T,X as U,T as a,Y as o,a0 as s,F as h,Z as i}from"../chunks/DPwOY9Ev.js";import{a as W}from"../chunks/CVJGeIlM.js";import{r as X}from"../chunks/DCuQ9oNW.js";import{b as Y}from"../chunks/BVHbt_mF.js";import{M as Z}from"../chunks/Dg1oJIwH.js";import{M as b}from"../chunks/JpPhfvuV.js";import{V as j}from"../chunks/COKwq80w.js";var k=N('<!> <div class="results svelte-6zq5v2"><div><h3><code> </code></h3> <span>Resized magnitude</span><input type="number"/> <!></div> <div><h3><code>v1.normalize()</code></h3> <!></div></div>',1);function L(x,M){w(M,!0);let t=_(2),r=_(C(new j(3,3))),y=s(()=>{try{return e(r).clone().normalize()}catch{return e(r).clone().zero()}}),V=s(()=>{try{return e(r).clone().resize(e(t))}catch{return e(r).clone().zero()}});const l=s(()=>[{name:"v1",vec:e(r),color:"#00FF00",onUpdate:d=>{h(r,d.clone().fixPrecision(1),!0)},isDraggable:!0}]),$=s(()=>[...e(l),{name:"v1.normalize()",vec:e(y),color:"#6e6ef4",isDraggable:!1}]),D=s(()=>[...e(l),{name:`v1.resize(${e(t)})`,vec:e(V),color:"#b16ef4",isDraggable:!1}]),m={size:10,graduation:1};var p=k(),u=P(p);Z(u,{title:"Resize methods"});var g=a(u,2),n=o(g),v=o(n),f=o(v),F=o(f);i(f),i(v);var c=a(v,3);X(c);var R=a(c,2);b(R,{get grid(){return m},get vectors(){return e(D)}}),i(n);var z=a(n,2),q=a(o(z),2);b(q,{get grid(){return m},get vectors(){return e($)}}),i(z),i(g),S(()=>W(F,`v1.resize(${e(t)??""})`)),Y(c,()=>e(t),d=>h(t,d)),T(x,p),U()}export{L as component};
