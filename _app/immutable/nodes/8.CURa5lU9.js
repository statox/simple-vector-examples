import"../chunks/DsnmJJEf.js";import{D as R,Q as g,R as b,F as j,G as a,I as A,J as E,K as H,M as L,z as e,S as N,O as i,B as D,P as d}from"../chunks/DUP_8v5R.js";import{a as r}from"../chunks/BVhCGFvA.js";import{V as F,M as T}from"../chunks/CfXP_IzQ.js";var W=j('<h2>Distance</h2> <!> <div class="results svelte-1xfkyhs"><div><code>v1.absDistanceX(v2)</code></div> <div> </div> <div><code>v1.distanceX(v2)</code></div> <div> </div> <div><code>v1.absDistanceY(v2)</code></div> <div> </div> <div><code>v1.distanceY(v2)</code></div> <div> </div> <div><code>v1.distance(v2)</code></div> <div> </div> <div><code>v1.distanceSq(v2)</code></div> <div> </div> <div><code>v1.distanceManhattan(v2)</code></div> <div> </div> <div><code>v1.distanceChebyshev(v2)</code></div> <div> </div></div>',1);function te(M,y){R(y,!0);let v=g(b(new F(0,5))),t=g(b(new F(2.5,0)));const C="#FF0000",X="#00FF00",Y=N(()=>[{name:"v1",vec:e(v),color:C,onUpdate:s=>{D(v,s.clone().fixPrecision(1),!0)},isDraggable:!0},{name:"v2",vec:e(t),color:X,onUpdate:s=>{D(t,s.clone().fixPrecision(1),!0)},isDraggable:!0}]);var m=W(),x=a(A(m),2);T(x,{grid:{size:10,graduation:1},get vectors(){return e(Y)}});var h=a(x,2),o=a(i(h),2),P=i(o,!0);d(o);var c=a(o,4),S=i(c,!0);d(c);var n=a(c,4),q=i(n,!0);d(n);var _=a(n,4),w=i(_,!0);d(_);var u=a(_,4),z=i(u,!0);d(u);var l=a(u,4),U=i(l,!0);d(l);var p=a(l,4),V=i(p,!0);d(p);var f=a(p,4),k=i(f,!0);d(f),d(h),E((s,B,G,I,J,K,O,Q)=>{r(P,s),r(S,B),r(q,G),r(w,I),r(z,J),r(U,K),r(V,O),r(k,Q)},[()=>e(v).absDistanceX(e(t)),()=>e(v).distanceX(e(t)),()=>e(v).absDistanceY(e(t)),()=>e(v).distanceY(e(t)),()=>e(v).distance(e(t)),()=>e(v).distanceSq(e(t)),()=>e(v).distanceManhattan(e(t)),()=>e(v).distanceChebyshev(e(t))]),H(M,m),L()}export{te as component};
