import"../chunks/DsnmJJEf.js";import{z as U,L as u,M as _,A as V,C as k,D as B,F as C,G,B as a,v as e,I as v,N as I,J as d,x as f}from"../chunks/B6V4Mh0Q.js";import{a as o}from"../chunks/Dkdr-M-y.js";import{V as x,M as J,a as L}from"../chunks/C6RbSxQY.js";var N=V('<!> <!> <div class="results svelte-1xfkyhs"><div><code>v1.angleWith(v2)</code></div> <div> </div> <div><code>v1.angleDegWith(v2)</code></div> <div> </div> <div><code>v1.orientedAngleWith(v2)</code></div> <div> </div> <div><code>v1.orientedAngleDegWith(v2)</code></div> <div> </div></div>',1);function H(W,D){U(D,!0);let t=u(_(new x(0,5))),i=u(_(new x(2.5,0)));const A=I(()=>[{name:"v1",vec:e(t),color:"#00FF00",onUpdate:r=>{f(t,r.clone().fixPrecision(1),!0)},isDraggable:!0},{name:"v2",vec:e(i),color:"#FF0000",onUpdate:r=>{f(i,r.clone().fixPrecision(1),!0)},isDraggable:!0}]);var l=N(),g=k(l);J(g,{title:"AngleWith methods"});var p=a(g,2);L(p,{grid:{size:10,graduation:1},get vectors(){return e(A)}});var h=a(p,2),s=a(v(h),2),F=v(s,!0);d(s);var n=a(s,4),M=v(n,!0);d(n);var c=a(n,4),b=v(c,!0);d(c);var m=a(c,4),w=v(m,!0);d(m),d(h),B((r,y,z,P)=>{o(F,r),o(M,y),o(b,z),o(w,P)},[()=>e(t).angleWith(e(i)),()=>e(t).angleDegWith(e(i)),()=>e(t).orientedAngleWith(e(i)),()=>e(t).orientedAngleDegWith(e(i))]),C(W,l),G()}export{H as component};
