import"../chunks/DsnmJJEf.js";import{p as h,s as d,a as v,f as b,b as M,c as D,d as _,e as o,g as e,u as l,h as u}from"../chunks/DN2LkAR_.js";import{M as X}from"../chunks/EWXXli4_.js";import{M as Y}from"../chunks/jorisKKQ.js";import{M as y}from"../chunks/UEpcUZ8_.js";import{M as $}from"../chunks/BnX5XO6O.js";import{V as m}from"../chunks/Gnf6quZY.js";var q=b("<!> <!> <!> <!>",1);function j(p,f){h(f,!0);let t=d(v(new m(0,5))),a=d(v(new m(2.5,0)));const g=l(()=>[{name:"v1",vec:e(t),color:"#00FF00",onUpdate:s=>{u(t,s.clone().fixPrecision(1),!0)},isDraggable:!0},{name:"v2",vec:e(a),color:"#FF0000",onUpdate:s=>{u(a,s.clone().fixPrecision(1),!0)},isDraggable:!0}]),x=l(()=>[{code:"v1.absDistanceX(v2)",result:e(t).absDistanceX(e(a)).toFixed(2)},{code:"v1.distanceX(v2)",result:e(t).distanceX(e(a)).toFixed(2)},{code:"v1.absDistanceY(v2)",result:e(t).absDistanceY(e(a)).toFixed(2)},{code:"v1.distanceY(v2)",result:e(t).distanceY(e(a)).toFixed(2)},{code:"v1.distance(v2)",result:e(t).distance(e(a)).toFixed(2)},{code:"v1.distanceSq(v2)",result:e(t).distanceSq(e(a)).toFixed(2)},{code:"v1.distanceManhattan(v2)",result:e(t).distanceManhattan(e(a)).toFixed(1)},{code:"v1.distanceChebyshev(v2)",result:e(t).distanceChebyshev(e(a)).toFixed(1)}]);var r=q(),i=M(r);y(i,{title:"Distance methods"});var n=o(i,2);$(n,{grid:{size:10,graduation:1},get vectors(){return e(g)}});var c=o(n,2);Y(c,{get results(){return e(x)}});var F=o(c,2);X(F),D(p,r),_()}export{j as component};
