import"../chunks/DsnmJJEf.js";import{z as F,L as O,M as z,A as C,C as D,D as V,F as w,G as B,B as s,v as t,N as d,I as r,x as G,J as o}from"../chunks/B6V4Mh0Q.js";import{a as c}from"../chunks/Dkdr-M-y.js";import{V as I,M as J,a as L}from"../chunks/CPznaXQM.js";var N=C('<!> <!> <div class="results svelte-86hevj"><div><code>v.toArray()</code></div> <div><code> </code></div> <div><code>v.toObject()</code></div> <div><code> </code></div> <div><code>v.toPolar()</code></div> <div><code> </code></div></div>',1);function H(x,h){F(h,!0);let a=O(z(new I(0,2.5)));const $=d(()=>{const e=t(a).toArray();return`[${e[0]}, ${e[1]}]`}),y=d(()=>{const e=t(a).toObject();return`{x : ${e.x}, y: ${e.y}}`}),b=d(()=>{const e=t(a).toPolar();return`{r : ${e.r}, theta: ${e.theta}}`}),j=d(()=>[{name:"v",vec:t(a),color:"#00FF00",onUpdate:e=>{G(a,e.clone().fixPrecision(1),!0)},isDraggable:!0}]);var n=N(),l=D(n);J(l,{title:"Constructor methods"});var u=s(l,2);L(u,{grid:{size:10,graduation:1},get vectors(){return t(j)}});var p=s(u,2),v=s(r(p),2),m=r(v),A=r(m,!0);o(m),o(v);var i=s(v,4),_=r(i),M=r(_,!0);o(_),o(i);var g=s(i,4),f=r(g),P=r(f,!0);o(f),o(g),o(p),V(()=>{c(A,t($)),c(M,t(y)),c(P,t(b))}),w(x,n),B()}export{H as component};
