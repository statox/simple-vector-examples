import"../chunks/DsnmJJEf.js";import{p as w,s as _,a as N,f as P,b as U,_ as j,g as e,c as k,d as A,e as a,$ as o,u as s,h,a0 as i}from"../chunks/CY1iBhr2.js";import{a as B}from"../chunks/hDrwkfIk.js";import{r as C}from"../chunks/cAKsN3DC.js";import{b as E}from"../chunks/CVuNliJ1.js";import{M as G}from"../chunks/Di_GUYk2.js";import{M as b}from"../chunks/Co6q3R2A.js";import{V as H}from"../chunks/DnDkWYNL.js";var I=P('<!> <div class="results svelte-6zq5v2"><div><h3><code> </code></h3> <span>Resized magnitude</span><input type="number"/> <!></div> <div><h3><code>v1.normalize()</code></h3> <!></div></div>',1);function X(x,M){w(M,!0);let t=_(2),r=_(N(new H(3,3))),y=s(()=>{try{return e(r).clone().normalize()}catch{return e(r).clone().zero()}}),$=s(()=>{try{return e(r).clone().resize(e(t))}catch{return e(r).clone().zero()}});const l=s(()=>[{name:"v1",vec:e(r),color:"#00FF00",onUpdate:d=>{h(r,d.clone().fixPrecision(1),!0)},isDraggable:!0}]),D=s(()=>[...e(l),{name:"v1.normalize()",vec:e(y),color:"#6e6ef4",isDraggable:!1}]),R=s(()=>[...e(l),{name:`v1.resize(${e(t)})`,vec:e($),color:"#b16ef4",isDraggable:!1}]),m={size:10,graduation:1};var p=I(),u=U(p);G(u,{title:"Resize methods"});var g=a(u,2),n=o(g),v=o(n),f=o(v),V=o(f);i(f),i(v);var c=a(v,3);C(c);var F=a(c,2);b(F,{get grid(){return m},get vectors(){return e(R)}}),i(n);var z=a(n,2),q=a(o(z),2);b(q,{get grid(){return m},get vectors(){return e(D)}}),i(z),i(g),j(()=>B(V,`v1.resize(${e(t)??""})`)),E(c,()=>e(t),d=>h(t,d)),k(x,p),A()}export{X as component};
